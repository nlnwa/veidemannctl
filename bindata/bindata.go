// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 11, 23, 13, 13, 50, 745327392, time.UTC),
		},
		"/CrawlExecutionStatus_table.template": &vfsgen۰CompressedFileInfo{
			name:             "CrawlExecutionStatus_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 927983425, time.UTC),
			uncompressedSize: 324,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\x90\xc1\x4a\x03\x31\x10\x86\xef\xfb\x14\x3f\x01\x8f\x0d\x6a\xb5\x07\x6f\xe2\x06\xac\x47\xf5\x01\xb6\x36\x53\x0c\xb8\x59\x99\x8c\xf6\x30\xcc\xbb\x4b\xb2\x95\xdd\xcb\x64\xf2\xf1\x87\xef\x27\xaa\x91\x4e\x29\x13\xdc\x73\x78\xec\xc3\xab\xc3\xc6\xac\x03\xa0\x9a\xf2\x2f\x71\x21\x33\xd5\x6f\x4e\x59\x4e\x18\xae\x36\xdb\x9d\xdf\xee\x0a\x96\xe5\xe6\xbe\x8e\xeb\x8a\x6e\xef\x2e\x73\x80\xdb\x47\x07\xf7\x32\x7d\xb4\xf3\x4d\x0e\x42\x0e\xae\x9f\x8e\x65\xbe\xb2\x40\xd2\x58\x59\xc8\x71\x5e\xab\x87\xa9\x90\x98\x75\xaa\x94\x63\x6b\xd2\xad\xe4\xcd\xb7\x96\xc6\x01\x7e\x1f\xe1\x9b\x07\xbe\x69\xe0\xfb\xe9\xf8\x33\x52\x96\xf2\xc4\x87\xf3\x17\x45\x33\xa8\x56\x45\x4b\xb0\xbc\xa7\x91\x56\x2c\xe4\x38\x13\xd5\x73\x92\x4f\xf8\xc0\x3c\xf1\xff\x27\x70\x7d\xdf\xc8\x03\x54\x7d\x4d\x5d\xaa\x2d\x6d\xff\x02\x00\x00\xff\xff\xdf\xc1\xb9\xcc\x44\x01\x00\x00"),
		},
		"/CrawlExecutionStatus_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "CrawlExecutionStatus_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 927983425, time.UTC),
			uncompressedSize: 324,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\x90\xc1\x4a\x03\x31\x10\x86\xef\xfb\x14\x3f\x01\x8f\x0d\x6a\xb5\x07\x6f\xe2\x06\xac\x47\xf5\x01\xb6\x36\x53\x0c\xb8\x59\x99\x8c\xf6\x30\xcc\xbb\x4b\xb2\x95\xdd\xcb\x64\xf2\xf1\x87\xef\x27\xaa\x91\x4e\x29\x13\xdc\x73\x78\xec\xc3\xab\xc3\xc6\xac\x03\xa0\x9a\xf2\x2f\x71\x21\x33\xd5\x6f\x4e\x59\x4e\x18\xae\x36\xdb\x9d\xdf\xee\x0a\x96\xe5\xe6\xbe\x8e\xeb\x8a\x6e\xef\x2e\x73\x80\xdb\x47\x07\xf7\x32\x7d\xb4\xf3\x4d\x0e\x42\x0e\xae\x9f\x8e\x65\xbe\xb2\x40\xd2\x58\x59\xc8\x71\x5e\xab\x87\xa9\x90\x98\x75\xaa\x94\x63\x6b\xd2\xad\xe4\xcd\xb7\x96\xc6\x01\x7e\x1f\xe1\x9b\x07\xbe\x69\xe0\xfb\xe9\xf8\x33\x52\x96\xf2\xc4\x87\xf3\x17\x45\x33\xa8\x56\x45\x4b\xb0\xbc\xa7\x91\x56\x2c\xe4\x38\x13\xd5\x73\x92\x4f\xf8\xc0\x3c\xf1\xff\x27\x70\x7d\xdf\xc8\x03\x54\x7d\x4d\x5d\xaa\x2d\x6d\xff\x02\x00\x00\xff\xff\xdf\xc1\xb9\xcc\x44\x01\x00\x00"),
		},
		"/CrawlLog_table.template": &vfsgen۰CompressedFileInfo{
			name:             "CrawlLog_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 927983425, time.UTC),
			uncompressedSize: 237,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x64\xcd\x3d\x6b\x86\x30\x14\xc5\xf1\x3d\x9f\xe2\x70\xe1\x19\x0d\x2d\xcf\x0b\x5d\x45\x85\xba\x15\xdb\xe2\xaa\xe4\x5e\x69\x16\xb5\x49\x2c\x48\xc8\x77\x2f\x91\x0e\x42\x97\x3f\xe7\x4c\xbf\x18\x59\x26\x3b\x0b\xe8\xb5\x29\xeb\xa6\x23\x14\x29\x29\x00\x88\x71\x75\x76\x0e\x13\x86\x4b\x71\x7d\xe8\xeb\xc3\xe3\x52\x3c\xdf\x73\xef\x4f\xb9\x2f\x39\x37\x3f\x80\xfa\xb2\xab\xd0\x32\x81\xde\xc6\xf0\x45\xa0\x4e\xbe\x37\xf1\x41\xf8\xd3\xd9\xe3\x9a\x8f\x7d\x95\x63\x79\x4a\x49\xc5\x28\x33\x1f\x92\x3a\x31\xff\x14\xfd\x07\xe9\x4c\xdd\x78\x80\xee\x47\x67\x5a\x86\xae\xad\x37\xcb\x8f\xb8\x3d\x83\xd0\x67\x2f\x3f\xb3\x38\xce\x22\xf4\x7b\x18\xc3\xe6\xab\x85\x25\x25\xf5\x1b\x00\x00\xff\xff\x44\x9e\xca\xfe\xed\x00\x00\x00"),
		},
		"/CrawlLog_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "CrawlLog_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 927983425, time.UTC),
			uncompressedSize: 878,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x8c\x91\x31\x6f\xdb\x30\x10\x85\xf7\xfc\x8a\x03\x01\x8d\x26\x22\xdb\x51\xd2\xd1\x70\x5c\xd4\x43\x80\x42\x72\x91\x55\xaa\x78\x8a\x39\x98\x54\x8f\x74\x5a\x85\xd0\x7f\x2f\x8e\x4c\x55\x19\x2e\xda\x2e\x0f\x3a\x52\xbc\xf7\xf0\xbe\x10\x14\x76\xda\x20\x88\x4f\xbb\xcd\xe3\xae\x14\xb0\x18\xc7\x1b\x00\x80\x10\xb4\x79\x45\x72\x38\x8e\x21\xf4\xa4\x8d\xef\xa0\xce\x16\xab\x42\xae\x0a\x07\xd9\x22\xbf\x63\xfd\xb0\x64\x7d\x60\x59\x2f\x5d\x0d\xe2\x79\x53\x6e\x61\xaf\x04\x88\xcf\x8d\x3f\x0a\x10\x25\x7e\x3b\xa3\xf3\xa8\xbe\x90\x8e\x63\x7b\x18\x7a\x14\x20\x9e\x1b\x6a\x4b\xec\x90\xdc\xc1\x0a\x36\x21\x74\xe8\x27\xf7\xaf\xa4\x5f\x8e\xbe\x1d\x1a\xc3\x77\xff\x9f\x25\x7e\xaf\x1c\x64\x79\xee\x20\xbb\x8f\x47\x39\x27\xdb\xfd\xc0\xf6\xec\xb5\x35\x29\xde\xbe\xdf\x28\x45\xe8\x5c\x0c\xe5\x7a\x6b\x1c\xa6\x88\x5b\x6b\x3c\x1a\xff\x1e\xb3\x44\xfe\xa3\xd2\x6f\x3c\x7c\x44\xdf\x1e\x9f\xd2\x13\x4f\xc3\x1f\x62\xff\x35\x70\x71\x2b\x8b\xdb\x58\xd8\x9a\x75\x99\xb4\xe0\x74\x95\xb7\xd4\xbc\x60\x89\x5d\x5c\xde\x21\x11\x92\x00\x71\xd0\x27\xac\x7c\x73\xea\x05\x88\x1d\x91\xa5\x0b\xcf\x10\xd0\xa8\x88\xec\x66\xe6\x73\xd5\x8b\x7c\xc7\x24\x19\x54\xba\xad\x41\x32\x80\xbd\x02\xf9\xa8\x5d\x6b\x5f\x91\x06\x26\x06\x72\x0e\x8c\xa7\xd6\x92\xe2\x2e\xd2\x83\x5f\xc4\xa2\xf9\x25\xa3\x7f\xfa\xe7\x77\x32\xd1\x51\x4c\x47\x41\x76\xaf\x20\x5b\xaa\x1a\xe4\xc4\x86\xf3\x4c\x64\xd8\x7d\x02\x03\x72\xc6\x05\x64\xe5\x1b\x7f\x76\x5b\xab\xf8\x5b\xbf\x21\xc8\xc8\x86\xeb\x7a\x8a\x0f\x3d\x69\x74\x97\x5d\x5d\x05\x9d\x03\x91\x0f\x6b\x2e\xe5\x37\x07\x5e\x92\x30\x8c\x23\x84\xe0\xf5\x09\x41\x4e\x38\xe2\xd9\x77\xcd\x85\x45\x2c\xbc\x37\xd5\x41\xa8\x78\x90\x2c\x68\xd4\x3c\xc2\xcf\x00\x00\x00\xff\xff\x5f\x36\x34\xb0\x6e\x03\x00\x00"),
		},
		"/JobExecutionStatus_table.template": &vfsgen۰CompressedFileInfo{
			name:             "JobExecutionStatus_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 927983425, time.UTC),
			uncompressedSize: 246,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\x8d\x41\x6b\x84\x30\x10\x85\xef\xf9\x15\x8f\x01\x8f\x06\x5a\x5b\xe9\xb5\xd4\x40\xbd\xb6\xbb\x77\xc5\x89\x10\x58\xe3\x92\x64\xd9\xc3\x90\xff\xbe\x44\x3d\x78\x78\x21\xf3\xcd\xf0\x3e\x11\xb6\xb3\xf3\x16\xf4\x6b\xbe\x3b\xf3\x47\xa8\x73\x56\x00\x20\x72\x0f\xce\xa7\x19\x43\x55\x37\xad\x6e\xda\x88\xea\xed\x33\xa2\xfa\x3a\x52\xbf\x7f\x1c\xef\x00\xea\x99\x40\xff\x69\x4c\x96\x40\xdd\x3a\x45\x02\x5d\x83\x8b\x3b\x0d\x09\xc9\x2d\x65\x65\x3c\xef\xdf\x9c\x95\x88\xf5\xbc\xf9\xd4\x49\x76\x12\x71\xc9\x00\xdd\x33\xf4\xd6\x0d\xdd\xad\xd3\x63\xb1\x3e\xc5\x9f\x30\x3e\x6f\x96\xa1\x8b\xe5\x18\x72\x86\x48\x69\xdf\xce\x43\xba\xb8\xc5\x9e\x98\xf1\xbc\x13\xf5\x0a\x00\x00\xff\xff\xa0\xf2\x67\xf1\xf6\x00\x00\x00"),
		},
		"/JobExecutionStatus_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "JobExecutionStatus_wide.template",
			modTime:          time.Date(2020, 11, 23, 7, 48, 38, 665766977, time.UTC),
			uncompressedSize: 467,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\x90\x4f\x6f\xc2\x30\x0c\xc5\xef\xfd\x14\x56\x04\x17\xb4\xa6\x62\x0c\x34\x21\xed\x30\x8d\x4a\x83\xe3\xfe\xdc\x5b\x1a\xd3\x45\xa3\x0e\x4a\xd2\x32\x64\xe5\xbb\x4f\x0d\x1d\x83\x83\x13\xe7\x25\xd6\xef\xe5\x31\xa7\x90\x4d\x6a\xe3\x4f\x07\x5c\x42\xad\xfd\x57\xbb\x95\x95\x69\x32\xda\xd3\xb1\xcc\x3a\xd4\x0a\x9b\x92\x28\x2d\x0f\x3a\xab\x4d\xb6\xb3\x86\xbc\x46\x9b\x75\x53\xb9\x31\xdb\xfc\x07\xab\xd6\x6b\x43\xef\xbe\xf4\xad\x9b\x64\x90\x86\x90\x24\xcc\x0a\x77\x9a\x10\xc4\x6b\xfe\xbc\xca\xdf\x44\x94\x01\x00\x98\x35\x75\x68\x1d\x86\xc0\x7c\xb0\x9a\xfc\x0e\x8a\x71\x3a\x5b\xc8\xd9\xc2\xc1\x7f\x33\x9d\x3b\x18\x3f\x0e\x95\xde\x3f\x0c\x6b\x01\x62\xad\x04\x88\x8d\xd9\xc6\xbd\xc7\xa2\x00\xb1\x32\x95\x13\x20\x3e\xad\x76\x67\xd5\x7a\xf0\xba\xe9\xaf\x72\x52\xe7\xb6\x27\x5a\x74\xe8\x43\x48\x98\x91\xd4\x9f\xd7\x8b\x8d\x48\xbe\xc2\xab\xbe\x0a\x90\x6b\x05\x32\x12\x41\x46\x20\xc8\x95\xa9\xda\x06\xc9\xbb\x17\x5b\x1e\xf7\xa8\x40\xf6\xe8\xe1\x10\x02\x30\xf7\xc8\xf8\xdc\xfa\x0f\xdd\xe0\x95\x96\x93\x3a\x2b\x09\xb3\x2d\xa9\x46\x18\x7d\xe3\xe9\x0e\x46\x5d\xb9\x6f\x11\x96\x4f\x20\x2f\xb1\xba\xc8\xbb\xc9\x6a\xda\xfb\x9b\xab\x22\x4e\x0d\x43\x37\x3f\xfa\x0d\x00\x00\xff\xff\xa4\xaa\xad\x86\xd3\x01\x00\x00"),
		},
		"/PageLog_table.template": &vfsgen۰CompressedFileInfo{
			name:             "PageLog_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 868,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x92\x4f\x8f\xda\x30\x10\xc5\xef\x7c\x8a\x91\xa5\x1c\x33\xda\x38\x62\x11\x7b\x5b\x51\x5a\xa1\xfe\x61\x95\x5d\xb4\x57\x4c\x3c\x0b\x56\x83\x83\x6c\xb3\x2d\x8a\xf2\xdd\xab\xf1\x96\x90\x20\xaa\x1e\x22\xd9\xe3\x68\xe6\xbd\xf7\x9b\xa6\xd1\xf4\x66\x2c\x81\x28\xe6\xcf\xcb\x55\x31\x9b\x0b\x48\xdb\x76\xd4\x34\x1b\x67\xb6\xbb\xb0\x57\x5b\xb2\x41\xb5\x6d\xd3\x1c\x9c\xb1\xe1\x0d\xd6\x49\x7e\x8f\xf9\xbd\x87\x24\x1d\x07\x48\x72\x0d\x49\x36\xe6\xdb\x54\xe2\x54\xf2\x21\x93\x98\xc9\xf3\x7b\x2a\x25\x4a\xe9\xd7\x80\xaf\xca\x95\x0b\x0d\xf8\xd9\xd5\xfb\x99\x2a\x77\x04\xf8\x1c\x54\x38\xfa\x59\xad\x09\xf0\x93\xf1\x65\xfd\x4e\xee\xf4\xa4\xc2\x0e\x70\xe5\x0c\x60\x41\xbe\x3e\xba\x92\x5e\x4e\x07\xe2\x9b\xd5\xe4\xd4\xa6\x22\xc0\xef\x66\x1f\xab\x2c\xcc\x91\xa7\x10\x35\x93\xd5\x51\xfd\xe8\x62\x6b\xb9\x7a\xf9\xb6\xf8\xf1\x75\xe8\xaa\x3c\x29\xdb\xb7\x04\x29\xcb\x9e\xdc\x61\x36\xb9\x63\xa9\xff\xed\xfa\xf4\xf8\xa5\x0b\xca\xd8\x77\x72\x9e\x06\x11\xa5\x5d\x46\xdd\x21\x93\xb9\x5f\x83\x78\x7d\x2c\x66\xb0\xd0\x02\xc4\xfc\x37\x95\xc7\x60\x6a\x1b\x6f\x2b\x67\xc4\x70\xec\xa6\xae\x34\x57\x4e\x54\x55\xf5\xaf\x9b\x04\xba\xe6\xfd\x7c\x7b\x7d\x63\x8c\xc3\xae\x3d\xb5\xff\x24\x7c\x8e\xdd\x3f\x40\x22\xc7\x28\x19\x2f\x7f\xb9\xbf\xb0\xfe\xb0\x14\x29\x63\x2c\x49\x89\xe3\xa1\xc1\x08\x59\x80\x28\xc8\x0b\x10\x8c\x95\x7d\x16\x8b\x58\x2a\x99\x5e\x3c\x59\xfe\x97\x79\x5e\xf9\x77\xca\x6e\xe9\xb2\x03\xfc\x18\x68\x7f\xa8\x54\x18\x6c\x6b\x84\x75\x46\x74\xc3\xdf\x35\xeb\x24\xcd\xa6\x13\x16\xba\x3c\x86\xca\xd8\x9f\xfe\xe1\xf6\xdc\xbf\xcf\xc3\xb1\xdd\x36\x9d\xa7\x5e\x2f\xc8\xe5\xd7\x8f\x15\xc1\xb6\x1d\xfd\x09\x00\x00\xff\xff\x0e\x9d\x9e\xc9\x64\x03\x00\x00"),
		},
		"/PageLog_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "PageLog_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 868,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x92\x4f\x8f\xda\x30\x10\xc5\xef\x7c\x8a\x91\xa5\x1c\x33\xda\x38\x62\x11\x7b\x5b\x51\x5a\xa1\xfe\x61\x95\x5d\xb4\x57\x4c\x3c\x0b\x56\x83\x83\x6c\xb3\x2d\x8a\xf2\xdd\xab\xf1\x96\x90\x20\xaa\x1e\x22\xd9\xe3\x68\xe6\xbd\xf7\x9b\xa6\xd1\xf4\x66\x2c\x81\x28\xe6\xcf\xcb\x55\x31\x9b\x0b\x48\xdb\x76\xd4\x34\x1b\x67\xb6\xbb\xb0\x57\x5b\xb2\x41\xb5\x6d\xd3\x1c\x9c\xb1\xe1\x0d\xd6\x49\x7e\x8f\xf9\xbd\x87\x24\x1d\x07\x48\x72\x0d\x49\x36\xe6\xdb\x54\xe2\x54\xf2\x21\x93\x98\xc9\xf3\x7b\x2a\x25\x4a\xe9\xd7\x80\xaf\xca\x95\x0b\x0d\xf8\xd9\xd5\xfb\x99\x2a\x77\x04\xf8\x1c\x54\x38\xfa\x59\xad\x09\xf0\x93\xf1\x65\xfd\x4e\xee\xf4\xa4\xc2\x0e\x70\xe5\x0c\x60\x41\xbe\x3e\xba\x92\x5e\x4e\x07\xe2\x9b\xd5\xe4\xd4\xa6\x22\xc0\xef\x66\x1f\xab\x2c\xcc\x91\xa7\x10\x35\x93\xd5\x51\xfd\xe8\x62\x6b\xb9\x7a\xf9\xb6\xf8\xf1\x75\xe8\xaa\x3c\x29\xdb\xb7\x04\x29\xcb\x9e\xdc\x61\x36\xb9\x63\xa9\xff\xed\xfa\xf4\xf8\xa5\x0b\xca\xd8\x77\x72\x9e\x06\x11\xa5\x5d\x46\xdd\x21\x93\xb9\x5f\x83\x78\x7d\x2c\x66\xb0\xd0\x02\xc4\xfc\x37\x95\xc7\x60\x6a\x1b\x6f\x2b\x67\xc4\x70\xec\xa6\xae\x34\x57\x4e\x54\x55\xf5\xaf\x9b\x04\xba\xe6\xfd\x7c\x7b\x7d\x63\x8c\xc3\xae\x3d\xb5\xff\x24\x7c\x8e\xdd\x3f\x40\x22\xc7\x28\x19\x2f\x7f\xb9\xbf\xb0\xfe\xb0\x14\x29\x63\x2c\x49\x89\xe3\xa1\xc1\x08\x59\x80\x28\xc8\x0b\x10\x8c\x95\x7d\x16\x8b\x58\x2a\x99\x5e\x3c\x59\xfe\x97\x79\x5e\xf9\x77\xca\x6e\xe9\xb2\x03\xfc\x18\x68\x7f\xa8\x54\x18\x6c\x6b\x84\x75\x46\x74\xc3\xdf\x35\xeb\x24\xcd\xa6\x13\x16\xba\x3c\x86\xca\xd8\x9f\xfe\xe1\xf6\xdc\xbf\xcf\xc3\xb1\xdd\x36\x9d\xa7\x5e\x2f\xc8\xe5\xd7\x8f\x15\xc1\xb6\x1d\xfd\x09\x00\x00\xff\xff\x0e\x9d\x9e\xc9\x64\x03\x00\x00"),
		},
		"/browserConfig_table.template": &vfsgen۰CompressedFileInfo{
			name:             "browserConfig_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 388,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x7c\x8f\x41\x4b\xc3\x40\x10\x85\xef\xf9\x15\xc3\x40\x8e\x59\x88\xb5\xc5\x6b\xd5\x42\x03\x46\xc4\x2a\xbd\x66\xe9\x4c\xd2\x39\x74\xb7\xec\xae\x6d\x75\xd9\xff\x2e\xdb\x8a\xa8\x04\x2f\xef\xf2\x0d\xf3\xbe\x17\x23\x71\x2f\x86\x01\x97\x8b\xf9\xfd\xe2\x19\xa1\x4a\xa9\x00\x00\x88\x71\xef\xc4\x84\x1e\xba\xb2\x9a\xcc\xd4\x64\xe6\xa1\xac\xea\xa9\x87\xb2\xbe\xc9\x51\xe7\xb8\xba\x44\x07\xd8\x10\x02\x3e\xea\x1d\x23\xe0\xab\x67\x37\x1f\xd8\x04\x04\x5c\x8b\x21\x7b\x5c\xc9\x47\x06\x4f\x7a\xe0\x17\xd9\xb1\x7d\xcb\xa8\xd5\xa7\xc6\xe8\x4d\x90\x83\x84\x77\x4c\xa9\x88\x91\x0d\x9d\x05\x8a\x1f\xed\x7f\x9b\xaf\x09\x4e\xe5\x94\x72\xf1\xe1\x1c\x1d\xa8\x86\x40\xb5\x1c\xb4\xca\x06\xa0\x56\x7b\xde\xa8\x5b\x67\x8f\x9e\xdd\x9d\x35\xbd\x0c\xea\xdb\x69\x94\x5e\x2c\xd7\x42\x61\xfb\x0f\x5f\xb2\x0c\xdb\xf1\x07\x79\xd9\x83\xd5\xf4\xb5\xae\xf5\xa3\x57\xbf\x16\xe7\xd3\xd6\xa7\x54\x7c\x06\x00\x00\xff\xff\xbc\xab\x2d\x1b\x84\x01\x00\x00"),
		},
		"/browserConfig_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "browserConfig_wide.template",
			modTime:          time.Date(2020, 11, 23, 7, 48, 38, 573763871, time.UTC),
			uncompressedSize: 466,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x7c\x8f\x51\x4b\xfb\x30\x14\xc5\xdf\xfb\x29\x2e\x81\xbe\x0c\x9a\xd0\xff\xfe\x1b\xe2\xdb\xd4\xc1\x06\x56\xc5\x29\x7b\x5d\xd6\xdc\x65\x57\x6c\x52\xda\xac\xdb\x0c\xf9\xee\x92\x4d\x07\x4a\xf1\xe5\x10\x72\x0e\xf7\x9c\x9f\xf7\x19\x88\x81\xb6\xee\x58\xe3\x35\x68\x72\xdb\xdd\x9a\x97\xb6\x12\xe6\xdd\xec\xa5\xe8\x90\x14\x56\xd2\x98\x4c\xd6\x24\xb4\x15\xa5\x35\x1b\xd2\xa2\xcb\xf9\xed\xe9\xf5\xb8\x7e\xc3\xd2\x0d\x04\x64\x21\x24\x89\xf7\x0a\x37\x64\x10\xd8\x6c\x3a\xb9\x9b\x3e\xb3\xd3\x37\x00\x80\xf7\x75\x43\xc6\x6d\x60\x95\x66\xc3\x31\x1f\x8e\x5b\x48\xb3\x7c\xd4\x42\x9a\x5f\x45\xc9\xa3\xfc\x3b\xcb\x0a\xd8\x5c\x31\x60\x0f\xb2\x42\x06\xec\xb5\xc5\x66\xa2\xd1\x38\x06\x6c\x49\x46\xd9\xfd\x82\x3e\xa2\xf1\x24\x35\xbe\x50\x85\x76\x17\xad\x42\x1e\xe6\x46\x96\x8e\x3a\x72\x47\x16\x42\xe2\x3d\x1a\xf5\xbd\xeb\xd2\xfe\xbb\xf9\xbf\x82\x43\x3a\x52\xb1\xb8\x3b\xc9\x0a\xf8\x5c\x01\x2f\xd0\x49\x1e\x17\x00\x5f\xd4\x58\xf2\x9b\xc6\xee\x5b\x6c\xce\xd4\xfc\xb2\xa9\xd7\x3d\xaf\x5c\x92\x72\xdb\x3f\xfc\x19\x92\xde\xf6\x1f\x88\x64\xf7\x56\xaa\x2f\xba\xa2\xed\x4d\xfd\x20\x8e\xd1\xa2\x0d\x21\xf9\x0c\x00\x00\xff\xff\x93\x9c\x1f\xb5\xd2\x01\x00\x00"),
		},
		"/browserScript_table.template": &vfsgen۰CompressedFileInfo{
			name:             "browserScript_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/browserScript_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "browserScript_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/collection_table.template": &vfsgen۰CompressedFileInfo{
			name:             "collection_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/collection_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "collection_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/completion.sh": &vfsgen۰CompressedFileInfo{
			name:             "completion.sh",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 2363,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xdc\x55\xcd\x6f\x9c\x46\x14\x3f\xc3\x5f\xf1\x34\xa5\x02\x5a\xb3\xbb\xce\xb1\x0e\x6d\xd3\xc8\xaa\x2a\xb5\x4d\x94\x1e\xaa\x0a\xaf\x11\x3b\xbc\x5d\x4f\x32\xcc\xe0\x99\xc1\xae\x43\xf9\xdf\xab\x61\xd8\x5d\xd8\x0f\xf7\x50\x9f\x72\x01\xde\xf7\xe7\xef\x91\xe7\x0f\xc8\x4a\xac\x0a\x21\xa8\xe1\x79\x5d\x28\x8d\xf9\x06\x4d\x14\x43\xeb\x03\x00\x94\x48\x79\xa1\x10\x12\xf5\x06\x4c\xb1\xe2\xa8\xd3\x08\x32\x82\xc2\x30\xf3\x44\x96\x29\xa1\x52\xac\xd9\x26\xa7\xaa\x78\xe4\x79\xcf\x66\xa8\x09\x64\x64\xa5\xe4\xa3\x46\x35\xd2\x19\x38\xb9\x23\x35\x81\x9b\x3e\x04\x40\x46\x7a\x73\xc7\x3f\x72\xba\x53\xcf\xc8\x46\xc9\xa6\x3e\x52\xb8\x93\xda\xe4\xbd\x68\xac\xfb\x51\xae\x8e\x34\x3f\xca\xd5\x24\x6c\x2d\x39\x33\x28\x50\xeb\x91\xea\x9e\x39\x76\xa7\x24\x47\xab\x54\xca\x8d\x25\x35\xbd\xc3\xb2\x71\xac\x49\x88\xad\xe0\x54\x95\x9a\x2a\x56\x9b\x13\x1d\x71\x82\x3e\x8e\x46\x2c\x47\x1a\x96\xd4\x04\xe2\xde\x07\x97\xb4\xe0\x6e\x0c\x69\xd0\xba\x71\x64\xc1\xe5\xb2\x83\xfb\x06\xd5\x13\x18\xac\x6a\x5e\x18\x84\xc9\x50\x65\x63\x7c\xdf\x63\x6b\xc8\x20\xf9\x0c\x24\xe8\xed\x08\x2c\xaf\xc0\xdc\xa1\x18\x92\x53\x68\x1a\x25\x60\xd1\x93\x6b\xe6\xf7\xef\xde\x6b\x4a\xd4\xac\x37\x89\xc2\x21\x66\x17\xc6\x64\xeb\x50\x00\x09\x68\xa3\x0e\xdd\x0d\x96\x41\xdb\x7f\x74\xb3\x15\x9a\x47\x44\x61\x5d\xd0\x46\x75\xe1\x05\x0c\x5f\x9f\xc3\x0b\x68\x99\x28\xf1\xef\xef\x42\x56\x86\x5d\x4c\xb6\x19\x78\x87\x3e\xa4\x2a\x51\xfd\xf4\x14\x4d\xd4\x67\x35\x6f\xe8\xa7\xc8\x12\x83\xe9\xb6\x09\x29\x69\xdb\x5a\x31\x61\xb8\x80\x19\x2b\xbb\xce\x89\xd9\x1a\xaa\xa2\x5e\x33\x8e\x90\x98\xa3\x46\xc1\x6b\x78\x1d\x4d\xb8\xa0\xb0\x96\xca\x0c\x1d\xde\x65\x43\x20\x91\xfb\x7e\x27\x86\x04\xed\x96\xb2\x32\xfd\x6a\x01\xaf\xbe\x9f\x97\xf8\x30\x17\x0d\xe7\x10\x4f\xba\x03\xe3\x14\xde\xbe\xfb\xed\xfd\x87\xeb\xf7\xbf\xfe\xe5\x62\x53\x59\xd5\x1b\x14\x90\xfc\x09\x24\x88\xa0\xaf\x60\x0d\xe1\xd7\xf7\x10\xda\xe8\x87\x09\x67\x3f\x2e\x3b\x02\x31\x81\x24\xd9\x4e\xe2\x1f\x28\x1e\x3f\x41\x38\x87\x39\xb4\xce\x1e\xc8\x0d\x21\xc1\xc2\x3e\xa1\x83\xf9\x6d\x76\x0b\xcb\x6f\x83\xbd\x38\x58\x40\x17\x0e\x3b\xb6\x66\x7e\xe7\xfb\x07\x77\x61\x83\x26\x57\xa8\x65\xa3\x28\xee\x4e\x83\x5d\x80\x0c\x82\xf6\x2b\x21\x1b\xa1\x6d\x22\x90\xe0\x3d\x2c\x60\xb9\x3c\xa8\x76\x58\xae\xcb\x6d\x00\xfb\x3a\x77\x79\x20\x68\x9d\xbf\xa9\xe3\xcb\x65\x37\x0e\xfa\xc3\x7f\x84\x5a\x9c\xaf\xa5\x9f\xdf\x71\x35\x0e\x5b\x47\xc0\xf9\xff\x2b\x93\x24\x76\xa4\x5f\xd2\x36\xd0\x46\x1b\x59\xe5\xeb\x46\xd0\x5d\xfb\x68\xa1\x11\x82\x96\x17\xda\xe4\x54\x56\x55\x21\xca\x0e\xd8\xbe\xc4\xc3\x75\x8a\x77\x92\x13\xcb\x30\x5e\xb7\x89\x9e\x9b\xee\x84\x75\x75\x75\x3a\x86\x9b\x81\x9b\x76\xec\x7b\x9e\xf7\xec\x1a\x58\x85\xc1\xb9\xe7\x79\x23\x9f\xdf\xc4\xa7\xa2\xa1\x2e\xe8\x19\x98\x88\xa2\x7a\x09\x88\x78\x6e\x1f\xad\x9d\xef\xd9\x67\xfa\x3c\x2e\x86\x5f\xc3\x70\x82\xce\x1f\xc2\x0a\x4d\x31\xb3\x39\x6e\xef\xe1\x4b\xee\xbd\x85\x2f\x09\x6c\x76\xa4\xff\x33\xdc\xba\x1b\x3f\xdc\xc3\xe9\xc1\x84\xe9\xc5\x3c\x05\x0f\xef\x79\x6c\xec\xc1\x70\x23\x9e\x41\x83\x03\x40\xf2\x00\xbf\xfc\xfc\xfb\xbb\x0f\xd7\x6f\xdf\xfc\x71\x9d\x5e\x5a\xba\x4e\x07\x88\x84\x6d\x9d\xa6\xba\x59\x69\xa3\xa2\x60\x71\xb1\xb8\xe0\x28\x36\xe6\x2e\xaa\xe3\xb8\x3b\x8f\x8a\x7f\x03\x00\x00\xff\xff\x6b\x7f\x63\x1f\x3b\x09\x00\x00"),
		},
		"/crawlConfig_table.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlConfig_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/crawlConfig_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlConfig_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/crawlEntity_table.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlEntity_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 122,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\xf2\x70\x75\x74\x71\x0d\x52\x52\xd0\xad\xad\xe5\x52\x50\x50\x50\xa8\xae\x2e\x28\xca\xcc\x2b\x49\x53\x48\x50\xd5\x35\x36\xd3\x33\x36\x2b\x56\x50\xd5\x35\x31\xd0\x33\x31\x28\x4e\x50\x50\xf2\x4c\x51\x52\x50\xf2\x4b\xcc\x4d\x55\xaa\xad\xe5\xaa\xae\x4e\xcd\x4b\x01\x6b\xe4\x42\xd2\x85\xaa\x43\xcf\x33\x45\x41\xcf\x37\xb5\x24\x51\x0f\xa4\xab\xb6\x96\x0b\x10\x00\x00\xff\xff\x58\xd6\xbb\x4d\x7a\x00\x00\x00"),
		},
		"/crawlEntity_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlEntity_wide.template",
			modTime:          time.Date(2020, 11, 23, 7, 48, 38, 610765120, time.UTC),
			uncompressedSize: 250,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x64\xcd\xcf\x4a\xc3\x40\x10\x06\xf0\x7b\x9e\xe2\x63\xa1\x97\xc2\xce\x46\x5a\x72\xf0\x26\x5a\xb0\xe0\x1f\xf0\x09\xba\xc9\x4e\xe2\x4a\x33\x09\x66\xad\xc8\xb8\xef\x2e\x5d\xff\x5c\xbc\x7d\x33\xc3\xfc\x3e\x55\x0b\xb7\x1e\xa6\xf4\x31\xf3\x25\x86\x98\x9e\xdf\x5a\xea\xa6\xd1\xc9\x51\xde\xbd\x3b\x71\x0c\x3c\x7a\x11\xeb\xe7\xe8\x86\xc9\x75\x93\xf4\x71\x70\xa7\x0b\xba\x2e\xe9\xb1\x7d\xe1\x2e\xad\x1d\x6c\xce\x55\xa5\x1a\xb8\x8f\xc2\x30\xb7\xbb\xab\x9b\xdd\x93\x29\x6b\x00\x50\x9d\x5f\xa3\xa4\x1e\x87\x95\xdd\x34\xb4\x69\x16\xac\xec\xb6\xa6\x6d\x7d\x0e\x4d\xbd\x1c\x60\xf6\xc1\xc0\x3c\xf8\x91\x0d\xcc\x9d\x6f\xf9\xb8\x98\x9c\x2b\x55\x96\xf0\xcb\x17\xe4\xfb\x06\xba\xe7\xe4\xa9\x0c\xf8\xc4\x1f\xff\x8f\xa6\xa2\xd3\x3e\xfc\x7c\x9c\x1b\x72\xae\xbe\x02\x00\x00\xff\xff\x03\xd6\xd8\x7c\xfa\x00\x00\x00"),
		},
		"/crawlHostGroupConfig_table.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlHostGroupConfig_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/crawlHostGroupConfig_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlHostGroupConfig_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/crawlJob_table.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlJob_table.template",
			modTime:          time.Date(2020, 11, 23, 13, 13, 50, 741327257, time.UTC),
			uncompressedSize: 348,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x74\xce\xc1\x4a\xc3\x40\x10\x06\xe0\x7b\x9e\x62\x58\xc8\xa5\x90\x59\xd2\x6a\x11\x6f\xda\x14\xac\x58\x05\xfb\x02\xd9\x24\x93\x38\x92\xec\x86\xec\x36\xb5\x2c\xfb\xee\x92\x4a\x44\x84\x5e\x86\x9f\x7f\x0e\xdf\xef\x7d\x02\x72\xd1\x18\x77\xee\xe9\x1e\x1a\x76\x1f\xc7\x02\x4b\xd3\x49\xdd\xea\x93\x92\x23\x71\x45\x9d\xd2\x3a\x51\x3d\xcb\xc6\xc8\xd2\xe8\x9a\x1b\x39\xa6\xb8\xb9\xa4\xb7\xe2\x93\x4a\xb7\x90\x90\x84\x10\x45\xde\x57\x54\xb3\x26\x10\x4f\xdb\x87\x6c\xfb\x2e\x2e\x35\x00\x80\xf7\xfd\xc0\xda\xd5\x90\xc7\xc9\x6a\x8d\xab\xb5\x85\x38\x49\x6f\x2d\xc4\x77\x16\xe2\xf4\x66\x3a\x4b\x9b\x83\xd8\x55\x02\xc4\xab\xea\x48\x80\xc8\xd8\xaa\xa2\xa5\xa9\xd9\xab\xaf\xc7\xb3\x23\xfb\x13\xb3\xe3\xa0\x1c\x1b\x2d\x42\x88\xbc\x27\x5d\xcd\xfc\x2f\xf2\x17\x18\x27\x60\x3a\xcb\x31\x07\xdc\x55\x80\x7b\x72\x0a\x27\x04\xf0\xd0\x53\x89\x9b\x41\x9d\xda\x67\x53\xe0\x2c\xfe\xef\x5f\xb8\x63\x67\x71\x5e\x71\xfd\x3d\x2f\x3b\x84\x10\x7d\x07\x00\x00\xff\xff\x6b\xb7\x3d\x0a\x5c\x01\x00\x00"),
		},
		"/crawlJob_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlJob_wide.template",
			modTime:          time.Date(2020, 11, 23, 13, 13, 50, 704326004, time.UTC),
			uncompressedSize: 348,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x74\xce\xc1\x4a\xc3\x40\x10\x06\xe0\x7b\x9e\x62\x58\xc8\xa5\x90\x59\xd2\x6a\x11\x6f\xda\x14\xac\x58\x05\xfb\x02\xd9\x24\x93\x38\x92\xec\x86\xec\x36\xb5\x2c\xfb\xee\x92\x4a\x44\x84\x5e\x86\x9f\x7f\x0e\xdf\xef\x7d\x02\x72\xd1\x18\x77\xee\xe9\x1e\x1a\x76\x1f\xc7\x02\x4b\xd3\x49\xdd\xea\x93\x92\x23\x71\x45\x9d\xd2\x3a\x51\x3d\xcb\xc6\xc8\xd2\xe8\x9a\x1b\x39\xa6\xb8\xb9\xa4\xb7\xe2\x93\x4a\xb7\x90\x90\x84\x10\x45\xde\x57\x54\xb3\x26\x10\x4f\xdb\x87\x6c\xfb\x2e\x2e\x35\x00\x80\xf7\xfd\xc0\xda\xd5\x90\xc7\xc9\x6a\x8d\xab\xb5\x85\x38\x49\x6f\x2d\xc4\x77\x16\xe2\xf4\x66\x3a\x4b\x9b\x83\xd8\x55\x02\xc4\xab\xea\x48\x80\xc8\xd8\xaa\xa2\xa5\xa9\xd9\xab\xaf\xc7\xb3\x23\xfb\x13\xb3\xe3\xa0\x1c\x1b\x2d\x42\x88\xbc\x27\x5d\xcd\xfc\x2f\xf2\x17\x18\x27\x60\x3a\xcb\x31\x07\xdc\x55\x80\x7b\x72\x0a\x27\x04\xf0\xd0\x53\x89\x9b\x41\x9d\xda\x67\x53\xe0\x2c\xfe\xef\x5f\xb8\x63\x67\x71\x5e\x71\xfd\x3d\x2f\x3b\x84\x10\x7d\x07\x00\x00\xff\xff\x6b\xb7\x3d\x0a\x5c\x01\x00\x00"),
		},
		"/crawlScheduleConfig_table.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlScheduleConfig_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/crawlScheduleConfig_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "crawlScheduleConfig_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/json.template": &vfsgen۰FileInfo{
			name:    "json.template",
			modTime: time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			content: []byte("\x7b\x7b\x70\x72\x65\x74\x74\x79\x4a\x73\x6f\x6e\x20\x2e\x7d\x7d\x0a"),
		},
		"/politenessConfig_table.template": &vfsgen۰CompressedFileInfo{
			name:             "politenessConfig_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/politenessConfig_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "politenessConfig_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 154,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\xe7\xa0\x63\x8e\xda\x42\x71\x15\x2c\x58\x50\x07\x9f\xa0\x91\x5c\xa1\xa0\x41\x4c\xb7\xe3\xde\x5d\x12\x1c\x74\xfb\x96\xef\xa7\x1a\x65\x59\x93\x80\x4e\xe3\xe1\x38\xde\x08\xde\xcc\x01\x80\xea\xeb\xbd\xa6\x6d\xc1\xdc\xf8\x7e\xe0\x7e\xc8\x68\x7c\xd7\x72\xd7\x96\xd8\xed\xf3\x0c\x9a\x22\x81\xae\xe1\x29\x04\x3a\x87\xbb\x3c\x32\x99\x39\x55\x49\xb1\x3a\xee\x07\xf9\x07\xea\xcf\x53\x04\x5f\x64\x0b\x5c\x8c\x6f\x56\xc7\xcc\x7d\x02\x00\x00\xff\xff\x9a\xc7\x3e\x46\x9a\x00\x00\x00"),
		},
		"/roleMapping_table.template": &vfsgen۰CompressedFileInfo{
			name:             "roleMapping_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 207,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xcd\xca\x82\x40\x14\x87\xf1\xfd\x5c\xc5\x9f\x03\x2e\x3d\xf8\x01\xe2\xf6\x85\x57\x48\xc8\x16\x76\x03\x4e\xcd\x31\x04\x9b\x86\x94\x36\xc3\xdc\x7b\x38\x14\xd5\xea\x79\x56\x3f\xef\x8d\x8c\x93\x15\xd0\xae\xf9\xfb\x6f\x7a\x42\x1a\x82\x02\x00\xef\xdd\x7d\xb2\xeb\x88\x21\x49\xcb\x8a\xcb\x6a\x41\x92\x16\x19\x17\xd9\x36\x79\xcd\x79\xfd\x99\x01\xd4\x1a\x02\x1d\xf4\x55\x08\xb4\xd7\x27\x99\x17\x02\xf5\xb7\x59\x28\x04\xe5\xbd\x58\x13\x69\xf5\xe5\xfe\x9a\x51\x7a\xbc\x3b\x80\x5b\x03\xee\x64\xd5\xbc\xa9\xaf\x8d\x32\xf8\xe8\xe4\xcc\x1b\xde\x69\xe7\x26\x7b\x89\x1f\x82\x7a\x06\x00\x00\xff\xff\xc0\x98\xe6\xb7\xcf\x00\x00\x00"),
		},
		"/roleMapping_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "roleMapping_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 207,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\xcc\xcd\xca\x82\x40\x14\x87\xf1\xfd\x5c\xc5\x9f\x03\x2e\x3d\xf8\x01\xe2\xf6\x85\x57\x48\xc8\x16\x76\x03\x4e\xcd\x31\x04\x9b\x86\x94\x36\xc3\xdc\x7b\x38\x14\xd5\xea\x79\x56\x3f\xef\x8d\x8c\x93\x15\xd0\xae\xf9\xfb\x6f\x7a\x42\x1a\x82\x02\x00\xef\xdd\x7d\xb2\xeb\x88\x21\x49\xcb\x8a\xcb\x6a\x41\x92\x16\x19\x17\xd9\x36\x79\xcd\x79\xfd\x99\x01\xd4\x1a\x02\x1d\xf4\x55\x08\xb4\xd7\x27\x99\x17\x02\xf5\xb7\x59\x28\x04\xe5\xbd\x58\x13\x69\xf5\xe5\xfe\x9a\x51\x7a\xbc\x3b\x80\x5b\x03\xee\x64\xd5\xbc\xa9\xaf\x8d\x32\xf8\xe8\xe4\xcc\x1b\xde\x69\xe7\x26\x7b\x89\x1f\x82\x7a\x06\x00\x00\xff\xff\xc0\x98\xe6\xb7\xcf\x00\x00\x00"),
		},
		"/seed_table.template": &vfsgen۰CompressedFileInfo{
			name:             "seed_table.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 207,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\xcd\x41\x0b\x82\x40\x10\x05\xe0\xfb\xfe\x8a\xc7\x80\x47\x87\xc0\x10\xaf\x81\x42\x1e\xea\xa0\x74\xd7\xda\x11\x16\x6c\x11\x5d\x82\x58\xf6\xbf\x47\x2b\x4b\x5d\x86\xe1\xf1\xf8\x9e\xf7\x5a\x26\x63\x05\x74\x6e\x4e\x75\xd3\x11\xf2\x10\x14\x00\x78\xbf\xac\xc6\xba\x09\x43\x96\x17\x25\x17\xe5\x86\x2c\x3f\x1e\xbe\x77\xff\xab\x6d\x00\xb5\x9a\x40\xb7\x75\x26\x50\x63\x9d\x71\xef\x18\xd4\x66\x1b\xef\xb3\x68\x0a\x41\x79\x2f\x56\x47\x55\xfd\x91\x89\xe3\x28\x26\xbf\x7a\x0d\xe0\x56\x83\x2f\xe2\x46\xbe\x8e\x4f\x01\xf7\x8b\x3c\xb8\x17\xd1\xbc\x0f\x74\x32\xc5\xca\x2f\x4f\x6b\x21\xa8\x4f\x00\x00\x00\xff\xff\xe7\x39\x7e\x79\xcf\x00\x00\x00"),
		},
		"/seed_wide.template": &vfsgen۰CompressedFileInfo{
			name:             "seed_wide.template",
			modTime:          time.Date(2020, 3, 17, 21, 41, 8, 928983452, time.UTC),
			uncompressedSize: 335,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\x8f\x41\x4b\xc4\x30\x10\x85\xef\xfd\x15\x8f\x81\xbd\xd9\xb0\xb0\x52\xf6\x2a\x6c\xc1\x2e\xae\x87\x2e\x9e\x44\x48\x6a\x26\x10\xa9\x69\xd9\x06\x41\x66\xf3\xdf\xa5\xe9\x56\xbd\x0c\x93\xc7\x17\xde\x37\x22\x96\x9d\x0f\x0c\x7a\xac\x1f\x0e\x75\x4b\x28\x53\x2a\x00\x40\x64\xbc\xf8\x10\x1d\xf4\xa6\xdc\x55\x6a\x57\x4d\xd8\x94\xf7\xdb\x79\x2e\xfb\x7e\x1e\xd5\x1a\x68\x50\x63\x09\xf4\x72\xe9\x09\x54\x87\xe8\xe3\x77\x0e\x0e\x7e\x32\x5d\xcf\xf3\xfa\x64\x3a\xee\x27\x02\x1d\x87\xae\xb1\x94\x52\x21\xc2\xc1\xe6\xca\xe2\xd6\xb7\x30\x50\x27\x8e\x46\xe5\x07\xae\xf8\x35\x59\x2d\x54\x16\x59\xb5\xf6\x5f\xd9\x44\x55\xdb\x49\x43\x35\xf6\xf6\xfb\xd9\x7c\x32\xd4\x79\xe4\x77\x75\x66\xb6\x6a\x91\x6a\xd9\x65\xe4\x2f\x5f\x0d\xb3\x87\x88\xc6\xab\x4e\x49\xc4\xf5\x26\x9e\xcc\xf8\x9f\x3c\x0e\x5d\xcb\x6e\xb9\xf4\x8a\x8f\xc1\x07\xe8\x3b\x64\x5a\xbf\xe9\x94\x8a\x9f\x00\x00\x00\xff\xff\xc2\x01\x68\xdd\x4f\x01\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/CrawlExecutionStatus_table.template"].(os.FileInfo),
		fs["/CrawlExecutionStatus_wide.template"].(os.FileInfo),
		fs["/CrawlLog_table.template"].(os.FileInfo),
		fs["/CrawlLog_wide.template"].(os.FileInfo),
		fs["/JobExecutionStatus_table.template"].(os.FileInfo),
		fs["/JobExecutionStatus_wide.template"].(os.FileInfo),
		fs["/PageLog_table.template"].(os.FileInfo),
		fs["/PageLog_wide.template"].(os.FileInfo),
		fs["/browserConfig_table.template"].(os.FileInfo),
		fs["/browserConfig_wide.template"].(os.FileInfo),
		fs["/browserScript_table.template"].(os.FileInfo),
		fs["/browserScript_wide.template"].(os.FileInfo),
		fs["/collection_table.template"].(os.FileInfo),
		fs["/collection_wide.template"].(os.FileInfo),
		fs["/completion.sh"].(os.FileInfo),
		fs["/crawlConfig_table.template"].(os.FileInfo),
		fs["/crawlConfig_wide.template"].(os.FileInfo),
		fs["/crawlEntity_table.template"].(os.FileInfo),
		fs["/crawlEntity_wide.template"].(os.FileInfo),
		fs["/crawlHostGroupConfig_table.template"].(os.FileInfo),
		fs["/crawlHostGroupConfig_wide.template"].(os.FileInfo),
		fs["/crawlJob_table.template"].(os.FileInfo),
		fs["/crawlJob_wide.template"].(os.FileInfo),
		fs["/crawlScheduleConfig_table.template"].(os.FileInfo),
		fs["/crawlScheduleConfig_wide.template"].(os.FileInfo),
		fs["/json.template"].(os.FileInfo),
		fs["/politenessConfig_table.template"].(os.FileInfo),
		fs["/politenessConfig_wide.template"].(os.FileInfo),
		fs["/roleMapping_table.template"].(os.FileInfo),
		fs["/roleMapping_wide.template"].(os.FileInfo),
		fs["/seed_table.template"].(os.FileInfo),
		fs["/seed_wide.template"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
